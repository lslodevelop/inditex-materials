services:

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Web console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  #MinIO bucket creation
  minio-init:
    image: quay.io/minio/mc:latest  # MinIO Client
    container_name: minio-init
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        echo 'Wating for MinIO to boot...';
        sleep 5;
        mc alias set myminio http://minio:9000 minioadmin minioadmin;
        echo 'Creation bucket assets in case it does not exist...';
        mc mb myminio/assets || echo 'Bucket already created';
        echo 'Bucket Ready!';
      "
    restart: "no"

  # Spring Boot app
  app:
    image: maven:3.9.9-eclipse-temurin-21
    container_name: asset-service
    working_dir: /app
    command: mvn spring-boot:run -Dspring-boot.run.profiles=minio
    volumes:
      - .:/app
      - ~/.m2:/root/.m2 # Maven local cache
    environment:
      STORAGE_ENDPOINT: http://minio:9000
      STORAGE_BUCKET: assets
      STORAGE_ACCESS_KEY: minioadmin
      STORAGE_SECRET_KEY: minioadmin
    depends_on:
      - minio
      - minio-init
    ports:
      - "8080:8080"

volumes:
  minio_data:

networks:
  default:
    name: asset-service-network